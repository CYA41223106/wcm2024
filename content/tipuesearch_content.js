var tipuesearch = {"pages": [{'title': 'First', 'text': '\n', 'tags': '', 'url': 'First.html'}, {'title': 'About', 'text': '網頁: 請填入目前網站所在的 URL,\xa0 https://cya41223106.github.io/wcm2024 \n 網誌: 請填入目前網站所在的 URL/blog,\xa0  https://cya41223106.github.io/wcm2024/blog \n 簡報: 請填入目前網站所在的 URL/reveal,  https://mde.tw/cmsimde_site/reveal \n 倉儲: 請填入目前網站所對應的 Github 倉儲連結 \n 本 cmsimde 網際內容管理系統的對應 Template 倉儲: \n\xa0 https://github.com/CYA41223106/wcm2024 \n 此 Template 將 cmsimde 作為子目錄而非子模組, 使用者可以依照需求自行修改 \n 倉儲對應網站:\xa0 https://cya41223106.github.io/wcm2024 \n', 'tags': '', 'url': 'About.html'}, {'title': '課程內容及課後心得', 'text': '', 'tags': '', 'url': '課程內容及課後心得.html'}, {'title': 'w1', 'text': '\n w1課程,登入 MS Online, 建立個人 Github 帳號, 以及利用 cmsimde_site 作為 Template 建立個人課程網站. \n \n \n', 'tags': '', 'url': 'w1.html'}, {'title': '登入 MS Online', 'text': '上課時登入 MS Online的Team中, 目的是能在 MS Teams 中上課, 一邊觀看教學示範, 一邊自行操作 \n', 'tags': '', 'url': '登入 MS Online.html'}, {'title': 'Github 帳號', 'text': '自行建立 Github 帳號,用來建立並維護個人的課程倉儲與網站 \n 創建個人github及replite的個人帳號 \n', 'tags': '', 'url': 'Github 帳號.html'}, {'title': '課後心得-1', 'text': '第一堂的內容對我們來說不算太複雜，因為上學期剛上過，就當老師幫我們複習，當再一次聽課時就顯得相較簡單了，包刮Github及Replit的基本操作，以及創建網站。 \n', 'tags': '', 'url': '課後心得-1.html'}, {'title': 'W2', 'text': '\n 四技 WCM 第二週課程, 利用 Github Codespaces 維護個人與分組網站. \n', 'tags': '', 'url': 'W2.html'}, {'title': '確認已建立個人網站', 'text': '1.登入 Github \n 2.利用此連結  https://github.com/mdecycu/cmsimde_site  \xa0"Create a new repository" 建立名稱為WCM2024的倉儲。 \n 3.在倉儲WCM2024的設定頁面中，點選Pages 中的 Branch 分支區域, 選擇將 main 分支存為網頁的 root 根目錄。 \n 4.等 wcm2024 的倉儲 Github Pages 轉檔完成後, 可以看到 commits 提交區的綠色勾勾, 就完成網址為  https://CYA41223106.github.io/wcm2024  的個人課程網站 \n', 'tags': '', 'url': '確認已建立個人網站.html'}, {'title': '利用Replit修改個人網站標題', 'text': '在 Replit 檢視動態網站或網誌推送到 Github 之前的內容, 必須要在動態與靜態模式中擇一使用. \n 1.登入Replit \n 2.進入個人網頁後,log in,將cmsimde_site選取後點擊Config更改標題,名稱為wcm2024 CYA41223106 \n', 'tags': '', 'url': '利用Replit修改個人網站標題.html'}, {'title': '利用 Codespaces 維護網站', 'text': '使用 Github Codespaces 維護網站的好處是提供多終端機與多 ports 開啟功能 \n 能夠同時開啟靜態網站與動態網站 \n \n', 'tags': '', 'url': '利用 Codespaces 維護網站.html'}, {'title': '心得-1', 'text': 'W2的課程讓我學到很多新的東西以及複習舊知識 \n 新:能夠再Github中使用Codespace直接將動態網站上編輯好的東西push到靜態網站上，使用Codespace能夠同時查看到動態與靜態的變化，使我更加方便。 \n 舊:更改個人網站標題，在之前上學期的課程中有學習過 \n \n \n \n', 'tags': '', 'url': '心得-1.html'}, {'title': 'w3', 'text': '\n WCM2024第三週課程, 除了 Replit, Github Codespaces, Gitpod 之外, 還介紹如何利用可攜系統維護個人與分組網站 \n', 'tags': '', 'url': 'w3.html'}, {'title': '利用 Github Classroom 分組', 'text': '本組作業名稱為5a,組長在取得作業連結之後,建立各組Team,本組共有6名組員,透過作業連結加入ag5 Team  \n \n 完成ag5 Team 建立後, 將取得 mdewcm2024 帳號下的 1a-ag5 倉儲, 所有第五組的組員均對此分組倉儲有管理權, 可以使用登入 Github 的帳號權限進行改版 \n \n 必須動態在 /home/runner/.ssh 下建立 id_rsa 與 config 連線設定, 各組組員才能利用 Replit 管理分組網站內容 \n', 'tags': '', 'url': '利用 Github Classroom 分組.html'}, {'title': '利用 Github Codespaces 維護倉儲', 'text': '使用 Replit 管理分組網站, 必須採動態建立 .ssh 目錄中的私鑰與 config, 過程比較複雜, 但若採用 Github Codespaces, 則可以在登入 Github 帳號下, 管理該帳號所有授權的倉儲, 包括分組倉儲與網站 \n', 'tags': '', 'url': '利用 Github Codespaces 維護倉儲.html'}, {'title': '常用的 git 指令', 'text': 'git 的新增、提交與推送指令: \n \n git add . git commit -m "說明字串" git push \n \n 使用 git add . 表示要認列所進行的全部改版內容, git commit -m 執行之前, 若在近端使用, 必須先行設定 git config, 將 home_ipv6 目錄下的 .gitconfig 中明確列出改版者的身分, 其中包括: \n \n git config --global user.name "提交者的 github 帳號名稱" \n \n git config --global user.email "提交者在 github 所登錄的 email address" \n \n 使用者也可以利用 git version 查詢目前所使用的 git 版本. \n \n git status 通常用來查核目前近端的改版狀況, 例如: 是否與遠端倉儲同步, 或者遠端倉儲已經有了新版本. \n \n 若遠端倉儲已經有新的版本, 則在 git push 之前, 必須設法取下遠端資料進行合併後, 才能再提交新的版本並推送到遠端. \n \n git pull = git fetch + git merge \n \n 由於要將各組員的 wcm2024 設定為各分組倉儲的子模組, 因此必須利用 git submodule add 以各組員的學號作為子目錄名稱, 利用下列指令, 將組員倉儲新增為分組倉儲的子模組: \n \n git submodule add 倉儲網址 子目錄 \n \n 若只要取下倉儲的主要內容, 可以使用下列指令: \n \n git clone 倉儲網址_協定.git 指定目錄與否 \n \n 若要取下帶有子模組的倉儲, 且可能該子模組還有設定其他子模組, 則必須要加上 --recurse-submodules: \n \n git clone --recurse-submodules 倉儲網址_協定.git 指定目錄與否 \n', 'tags': '', 'url': '常用的 git 指令.html'}, {'title': '心得-2', 'text': 'W3的課程學習到關於建立分組網站的操作以及利用上次所講的Codespaces來做分組網站的維護，建造分組網站後，需學習如何讓每個人都有權限去做帳號及內容管理，還有在程式中關於git的各種不同涵義的指令，在日後的內容新增及上傳的作用非常大。 \n', 'tags': '', 'url': '心得-2.html'}, {'title': 'W4', 'text': '\n wcm2024第四週課程,複習前三週的課程內容, 並且介紹 git 與 cmsimde 的相關用法 \n', 'tags': '', 'url': 'W4.html'}, {'title': 'Replit 靜態網站檢視', 'text': 'main2.py 與 static.py, 只要在 Shell 執行 python3 main2.py 就可以執行倉儲內的靜態網站檢視. 另一方面, 若要取消先前執行 python3 main2.py, 只需要在 Shell 頁面按下 ctrl + c, c 代表 cancle 也就是取消,然後若要執行動態網站，可以在 Shell 執行 python3 main.py 或者使用 Replit 的 Run 按鍵. \n', 'tags': '', 'url': 'Replit 靜態網站檢視.html'}, {'title': 'Replit 建立分組倉儲權限', 'text': '由於 Replit 上的免費帳號僅允許與一個 Github 帳號對應, 因此若將分組網站 import 到 Replit, 必須自行在 /home/runner/.ssh 目錄下建立 id_rsa 與 config \n \n Host github.com\nUser git\nHostname github.com \n \n \n 而 Host 的設定與 Windows putty 中的 session 名稱相同, 配合使用的 ssh 連線指令將會是: \n git clone --recurse-submodules  git@github.com:mdewcm2024/ag5.git \n \n 當使用者完成 /home/runner/.ssh 目錄中的 id_rsa 與 config 建立後,使用者必須將此兩個檔案存至隨身碟, 並在需要對分組倉儲改版時, 啟動分組倉儲的動態網站, 將隨身碟中的 id_rsa 與 config 檔案, upload 到分組倉儲的 downloads 目錄後, 再利用 ssh.py 的執行, 將 id_rsa 與 config 移動到 /home/runner/.ssh 目錄中. 也就是執行:python3 ssh.py \n \n import os\nif not os.path.exists("/home/runner/.ssh"): \n    os.makedirs("/home/runner/.ssh") \nos.system("mv ./downloads/id_rsa.txt /home/runner/.ssh/id_rsa")\nos.system("mv ./downloads/config.txt /home/runner/.ssh/config")\nos.system("chmod og-rwx /home/runner/.ssh/id_rsa") \n \n', 'tags': '', 'url': 'Replit 建立分組倉儲權限.html'}, {'title': 'Replit, Codespaces 與 Gitpod 執行動態與靜態網站', 'text': '說明如何在 Replit, Codespaces 與 Gitpod 維護並檢視網頁內容 \n', 'tags': '', 'url': 'Replit, Codespaces 與 Gitpod 執行動態與靜態網站.html'}, {'title': '課後心得-2', 'text': '這週w4的學習內容開始變多，但很多東西都是前一堂課老師有先幫我們預習下一次要講的內容，所以才不會那麼吃力，操作內容也慢慢變多，希望下次我能跟得上，透過分組網站，讓我和我的同學一起思考，解決方法，感覺真好。 \n \n', 'tags': '', 'url': '課後心得-2.html'}, {'title': 'W5', 'text': '\n', 'tags': '', 'url': 'W5.html'}, {'title': '網路詢答整理(對 ChatGPT 提問)', 'text': '精密機械專業的實習，可能需要準備以下資料和文件： \n \n 1.履歷（Resume/CV）： \n 確保履歷中包含你的基本資料、教育背景、技能、實習或工作經驗（如果有的話）、專業興趣和獎項等相關資訊。 \n 2.求職信（Cover Letter）： \n 一封針對該實習職位的求職信，介紹你的動機、適合該職位的理由、相關技能和專業背景。 \n 3.學歷證明文件： \n 包括最近的學校成績單、畢業證書或在讀證明（如果還在學）等文件。 \n 4.作品集（Portfolio）： \n 如果你有相關的作品，例如設計圖、技術報告、研究論文或專案成果，可以製作一個作品集以展示你的能力和成就。 \n \xa05.證書和執照： \n 如果有相關的證書或執照（例如安全執照），也準備好副本以備查詢。 \n \n 這些文件和資料的準備可以幫助你在申請過程中展示你的專業素養、技能和對該實習機會的熱忱，提升你成功獲得實習機會的機會。 \n \n 以目前台灣的產業情況而言, 比較有永續的精密機械產業有哪些? \n 目前台灣的產業情況下，有幾個精密機械產業特別注重永續發展： \n 半導體製造設備： \n 台灣在半導體製造設備領域有著相當強大的地位，尤其在製程設備和檢測設備方面。這些設備需要高精度和高效能，以支持半導體產業的技術進步和製造效率提升，因此具有長期的永續性需求。 \n 精密工具機： \n 台灣的精密工具機產業在全球市場上佔有一席之地，不僅應用於製造業中，還廣泛用於半導體、光學、航太等高科技產業。隨著全球對高精度、高效能機械設備的需求增加，這個產業的永續性也相對較高。 \n 光學及精密元件製造： \n 台灣在光學元件及精密元件製造方面有相當成熟的產業鏈，包括鏡頭、光學檢測設備、精密機械零件等。這些產品不僅應用於半導體設備、醫療設備，還涉及到科學研究和航太等領域，因此具有長遠的發展潛力。 \n 綠能製造設備： \n 台灣的綠能產業，特別是太陽能和風能的相關設備製造，也是一個具有永續發展潛力的領域。這些設備的製造和檢測需要高精度的精密機械技術支持，並且隨著全球對可再生能源需求的增加，相應的市場需求也會持續擴大。 \n \n 這些精密機械產業不僅在技術層面具有挑戰性和高要求，而且在全球市場上有穩定的需求，因此對於台灣的產業而言，這些領域都是長期發展和永續性的重要支柱。 \n \n 現代年輕人, 應該如何學習運用電腦與網路? \n 現代年輕人學習運用電腦與網路是非常重要的，這些技能不僅能提高生活和工作效率，還能開拓更多的學習和職業機會。以下是幾個建議： \n 基礎操作技能： \n 從基礎開始，學習如何操作電腦和各種常用軟體，例如操作系統（Windows、macOS）、文字處理軟體（Microsoft Word、Google Docs）、試算表軟體（Microsoft Excel、Google Sheets）等。這些技能是日常生活和工作中必不可少的。 \n 網路安全意識： \n 學習如何保護個人資料和隱私，理解常見的網路詐騙手法，如何建立強固的密碼，以及如何使用防病毒軟體和防火牆來保護電腦安全。 \n 網路資源利用： \n 學習如何有效地使用網路資源來查找資訊、學習新知識、觀看教育視頻、參與線上課程等。網路提供了無限的學習機會，懂得如何有效利用這些資源對個人成長非常有幫助。 \n 程式設計和數位技能： \n 如果有興趣，可以學習一些基本的程式設計語言（例如Python、JavaScript），這對於理解電腦運作的原理和解決問題能力非常有幫助。此外，理解數位媒體創作、網頁設計等技能也是很有用的。 \n 線上協作與溝通： \n 學習如何在線上協作和溝通，包括使用電子郵件、即時通訊工具（如Slack、Microsoft Teams、Zoom）、社交媒體等，這對於現代職場和學習環境中的團隊合作至關重要。 \n 持續學習和更新技能： \n 電腦和網路技術不斷進步，因此要有持續學習的意識，隨時更新自己的技能和知識。可以通過參加線上課程、觀看教學視頻、閱讀科技博客等方式來保持競爭力。 \n \n 總之，學習運用電腦與網路是一個持續進步的過程，不僅能增強個人的實用能力，還能打開更多的學習和職業機會，為未來的發展奠定良好的基礎。 \n \n 以目前 AI 的發展趨勢來看, 會對學校教育有哪些重大影響? \n 隨著人工智慧（AI）的發展，對學校教育的影響將逐步顯現出來，主要的影響包括以下幾個方面： \n 1.個性化學習： \n AI 技術可以根據學生的學習表現、興趣和學習風格，提供個性化的學習內容和進度安排。這樣的個性化學習系統能夠更有效地滿足不同學生的需求，提高學習效果。 \n 2.智能化教學輔助工具： \n 學校可以利用AI開發智能教學輔助工具，如智能數學解題系統、語言學習應用程式、自動化評估和反饋系統等，這些工具能夠幫助教師更好地設計教學活動，並提供即時的學習支持。 \n 3.教學資源的個性化推薦： \n AI 可以根據學生的學習情況和興趣，推薦適合的教學資源，包括電子書、教學影片、線上課程等。這樣能夠幫助學生更有效率地進行自主學習。 \n 4.自動化評估和反饋： \n AI 可以用於自動化評估學生的學習成果，從而提供即時的反饋和建議。這不僅能幫助教師更快速地了解學生的學習進度，還能夠讓學生及早發現和解決問題。 \n 5.教育管理和預測分析： \n AI 技術可以分析大量的教育數據，提供教育管理者更精確的學校運營分析和預測。這些分析可以用於改進教學質量、學校管理和資源配置。 \n 6.跨文化和跨語言學習： \n AI 技術有助於打破語言和文化障礙，提供多語言教學支持和跨文化交流機會，這對於全球化教育的發展至關重要。 \n \n 總的來說，AI 的發展將使得教育更加靈活、個性化和高效。然而，同時也需要注意平衡技術應用與人文關懷，確保教育仍然能夠培養學生的創造力、批判思維和人際互動能力，這些都是AI無法完全取代的重要素養。 \n \n 心得: \n 透過Chat Gpt的回答才得以讓我了解這些，他回答的內容很多，但我必須透過自己篩選及判斷拿取對我來說有用的訊息，現代社會很多都是靠AI來做學習，這對我們來說不是一件壞事，但我們也必須有能夠判斷的能力，不能夠凡事都相信AI，否則自己會迷失方向。 \n \n', 'tags': '', 'url': '網路詢答整理(對 ChatGPT 提問).html'}, {'title': 'W6', 'text': '\n 說明如何透過與 ChatGPT 的對話, 了解有關 git 在不同專業領域的應用方法 \n \n \n', 'tags': '', 'url': 'W6.html'}, {'title': 'Git 歷史與希望解決的問題', 'text': 'A1 請簡述一下 Git 的發展歷史, 以及當時的背景如何?A2 Git 想要解決甚麼問題? \n \n A1:Git 的發展歷史可以追溯到2005年，由Linux之父Linus Torvalds開始開發。當時的背景是開源軟體社群中版本控制系統的需求日益迫切。 \n \n 背景: \n 在2005年之前，許多開源專案使用的主流版本控制系統是「BitKeeper」。然而，由於一些爭議和授權問題，Linux內核開發社群失去了對BitKeeper的免費使用權。這迫使Linux社群尋找一個新的、自由開源的版本控制系統來替代BitKeeper，這也促成了Git的誕生。 \n \n A2:Git 的解決問題： \n \n 1.分散式版本控制： \n Git 的主要目標是解決分散團隊協作的版本控制問題。傳統的中央化版本控制系統（如CVS和Subversion）需要依賴單一的中央伺服器來管理代碼版本，這對於全球分佈的開發團隊來說效率可能不高，而且伺服器單點故障也會影響所有人的工作。 \n \n 2.速度和效能： \n Git 被設計成非常快速和高效。它使用了一些先進的技術，如對象存儲、分支管理和快照機制，使得大型項目的版本控制操作變得更加高效和可靠。 \n \n 3.強大的分支支持： \n Git 提供了強大的分支管理功能，這使得開發者可以輕鬆地創建、合併和管理分支。這對於同時進行多個功能開發、修復問題和測試新想法的開發團隊來說至關重要。 \n \n 4.本地化操作： \n Git 讓每個開發者都擁有完整的倉庫歷史記錄的副本，這意味著可以在離線狀態下進行操作。這樣的本地化操作使得開發者在不同地點、時間和網路環境下都能夠持續工作。 \n \n 總的來說，Git 的誕生不僅是為了滿足Linux內核開發的具體需求，也因為它解決了當時許多開發團隊普遍面臨的版本控制問題，並且提供了更先進、更靈活和更高效的解決方案，這使得它迅速成為了全球開發者社群的首選版本控制系統。 \n \n', 'tags': '', 'url': 'Git 歷史與希望解決的問題.html'}, {'title': 'Git 如何解決產品設計問題', 'text': 'Git 在產品設計領域的應用可以幫助解決多個問題，主要集中在版本控制、協作和追蹤變更等方面： \n \n 1.版本控制： \n 在產品設計中，通常涉及多個版本和修訂。Git 提供了強大的版本控制功能，可以跟蹤和管理設計文檔、原型、測試文檔等的各個版本。這使得設計師和工程師可以隨時回溯到先前的版本，查看和比較修改，從而更好地管理設計的進展和變更。 \n \n 2.分支管理： \n 設計過程中常常需要同時進行多個功能性和版本間的開發。Git 的分支管理能力讓團隊可以同時進行多個獨立的工作流程，每個分支可以專注於不同的設計方向或功能，而不會互相干擾。這使得設計團隊可以更靈活地進行實驗、測試新功能和快速迭代。 \n \n 3.協作和共享： \n Git 提供了有效的協作機制，團隊成員可以同時編輯和修改設計文檔，Git 能夠管理並合併這些修改，從而避免了不同版本之間的衝突和混亂。此外，Git 的分佈式特性使得每個團隊成員都能夠在本地操作和提交變更，而不依賴於單一的中央伺服器，這在多地點和跨地域的團隊合作中尤其重要。 \n \n 4.追蹤和管理變更： \n Git 讓設計團隊能夠清楚地追蹤每個變更的來源和原因，每一個提交都可以 \n \n 準確記錄誰做了什麼修改，這樣可以在需要時輕鬆回溯和解決問題。這種細緻的變更追蹤和管理有助於保持設計文檔的整潔和準確性，同時提升團隊的工作效率和協作品質。 \n \n 總結來說，Git 在產品設計中的應用不僅使得版本控制更加靈活和高效，還能夠有效管理多人協作、追蹤變更，從而提升整個設計過程的效率和品質。 \n \n', 'tags': '', 'url': 'Git 如何解決產品設計問題.html'}, {'title': '從 git init 到 git push', 'text': '啟動近端可攜程式系統 \n \n 更換目錄至 y:\\tmp 分別建立 gitproject\\repository 與 gitserver\\repository 目錄 \n \n 利用以下指令, 設定之後的 git init 將採用 main 作為內定主分支 \n \n 在 Y:\\tmp\\gitproject> git config --global init.defaultBranch main \n \n 進入 gitproject\\repository 目錄, 新增一個目錄名稱為 repo1, 進入 repo1 後執行 git init \n \n 進入 gitserver\\repository 目錄, 新增一個目錄名稱為 repo1, 進入 repo1 後執行 git init --bare \n \n 之後在 Y:\\tmp\\gitproject\\repo1 目錄操作, 建立新檔案 README.md: \n \n echo "Hello, World!" > README.md \n \n git add README.md \n \n git commit -m "Initial commit" \n \n git remote add origin y:\\tmp\\gitserver\\repository\\repo1 \n \n git push -u origin main \n \n 如此, 就可以將 Y:\\tmp\\gitproject\\repo1 中的倉儲內容送到 Y:\\tmp\\gitserver\\repository\\repo1 目錄中. 之後請在 C:\\tmp\\repository> 執行 git clone Y:\\tmp\\gitserver\\repository\\repo1, 由於沒有特別指令倉儲 clone 後的目錄名稱, 因此 git 會將 Y:\\tmp\\gitserver\\repository\\repo1 倉儲內容複製一份放入 C:\\tmp\\repository\\repo1 目錄中. \n \n 表示目前 Y:\\tmp\\gitserver\\repository\\repo1 伺服器中的 repo1, 已經分別存入 Y:\\tmp\\gitproject\\repo1 與 C:\\tmp\\repository\\repo1 目錄中, 使用者可以分別在這兩個倉儲中進行改版後, 在各自的倉儲資料中進行提交, 隨後再設法將改版內容 push 到 Y:\\tmp\\gitserver\\repository\\repo1 中進行合併. \n \n 最後, 若要讓使用者跨網路存取 Windows 操作系統上的倉儲, 可以根據這裡的說明, 啟動伺服器: \n git daemon --reuseaddr --base-path=. --export-all --verbose \n 然後利用 C:\\tmp\\repository>git clone git://localhost/repo1 repo002 取下倉儲內容, 其中的 localhost 可以使用外部 IP 或對應的網路符號名稱. \n \n 若要在 Windows 環境打造一個類似 Github 的網際環境, 可以採用 https://github.com/gogs/gogs, 其中包括網際資料庫 PostgreSQL 伺服器或 SQLite 的應用 \n \n', 'tags': '', 'url': '從 git init 到 git push.html'}, {'title': 'W8', 'text': '\n 從教育的本質看網際內容管理課程的內容要點 \n \n \n', 'tags': '', 'url': 'W8.html'}, {'title': '從教育的本質看課程內容', 'text': '理查德.萊文在某畢業典禮上所闡述的觀點:大學不應僅僅提供專業知識和技能，而應培養對學生的渴望和對世界的好奇心，如果畢業生在畢業後具有特定的專業知識和技能，那反應大學的是失敗，學生應該在畢業後根據自己德興去來追求事物。 \n \n 他也鼓勵學生探索不同學科及科目的廣泛教育重要性，促進智識好奇心及批判性思維，不僅僅專注於專業知識，也強調大學培養學生的智識能力、創造力和領導能力，不僅僅是學術成就與榮譽。 \n', 'tags': '', 'url': '從教育的本質看課程內容.html'}, {'title': '心得-3', 'text': '這堂課的內容讓我認識了一位經濟學家，他所認為的教育跟我已往聽到的教育不太一樣，他的教育是以找到學生的興趣去做教育並且啟發更多的發展價值，而不單單僅限於一個能力去侷限了自己能做的更多事，聽完他的話後我覺得很有道理，我想作為學生的我也應該好好的思考自己的教育了。 \n', 'tags': '', 'url': '心得-3.html'}, {'title': '課程期中心得', 'text': '\n', 'tags': '', 'url': '課程期中心得.html'}, {'title': '網頁式內容管理', 'text': 'Q1:如何建立 Github 上的網站? \n \n A1: GitHub 上建立網站可以使用 GitHub Pages ，先創立一個儲存庫，名稱為username.github.io，在存儲庫中創建一個名為「index.html」的 HTML 文件，用於構建你的網站主頁。將網站的代碼添加到 index.html 文件中，然後把它推到 GitHub 存儲庫。 \n \n Q2:如何管理內容? \n \n A2: GitHub 上管理網站內容通常使用版本控制工具 Git。可以在本地創建一個 Git 存儲庫，將網站代碼下載到本地，然後在本地修改和更新網站內容。完成修改後，使用 Git 將更改推送到 GitHub 存儲庫。另外，可以使用分支（Branches）來開發新功能或進行實驗，然後將分支合併（Merge）到主分支（通常是 master 或 main）中。 \n \n Q3: 如何建立章節式網站? \n \n A3:建立章節式網站可以使用靜態網站生成器，如Replit、Codespaces或Gitpods等。首先，需要選擇一個適合你需求的生成器，然後在本地開發環境中創建你的網站再使用生成器提供的模板和功能來創建不同的章節和內容頁面，組織你的網站內容。完成編輯後，使用生成器將網站生成為靜態文件，然後將這些文件推送到GitHub存儲庫中。最後，你的章節式網站將通過GitHub Pages或其他靜態網站托管服務進行部署，讓其他人可以訪問和瀏覽你的網站。 \n \n Q4:能放入甚麼多媒體內容? \n \n A4: \n \n 1.圖片:嵌入YouTube、Vimeo等視頻平台提供的影片連結，或者將視頻文件直接嵌入到網頁中，讓讀者可以觀看視頻內容。 \n \n 2.影片:嵌入YouTube、Vimeo等視頻平台提供的影片連結，或者將視頻文件直接嵌入到網頁中，讓讀者可以觀看視頻內容。 \n \n 3.音頻:嵌入音樂或語音文件，如Podcast等，讓讀者可以聆聽音頻內容。 \n \n 4.地圖:嵌入地圖服務，如Google Maps，以展示地理位置或路線信息。 \n \n 5.表格:使用HTML或Markdown格式來創建和展示表格內容，以整理和呈現數據。 \n \n 6.圖表和圖形:使用JavaScript圖表庫或其他數據可視化工具來創建和展示圖表和圖形，以呈現數據和統計信息。 \n \n 7.放入網站:嵌入其他網站提供的媒體內容，如Twitter貼文、Instagram照片等，以擴展你的內容範圍。 \n \n Q5:靜態圖文? \n \n A5: \n \n 1.圖片:將圖片文件直接插入到章節內容中。你可以使用HTML的  <img>  標籤或Markdown的圖片語法（例如 ![ 圖片描述 ]( 圖片URL )）來添加圖片。 \n \n 2.文本:使用Markdown或HTML來編寫文本內容，包括標題、段落、列表等。Markdown提供了簡單易讀的語法，而HTML則提供更多的自定義和控制。 \n \n 3.超連結:使用超連結來連接不同章節或其他網站。在HTML中，你可以使用  <a>  標籤來創建超連結，而Markdown則提供了 [ 連結文字 ]( 連結URL ) 的語法。 \n \n 4.引用:引用其他資料或文字也是常見的做法。你可以使用Markdown的引用語法（> 引用文字）或HTML的  <blockquote>  標籤來添加引用內容。 \n \n Q6:動態圖文? \n \n A6: \n \n 1.動畫:使用CSS或JavaScript來創建和控制動畫效果，使圖片、文本或其他元素呈現動態效果。你可以使用CSS的 @keyframes 樣式或JavaScript的動畫庫（如Animate.css）來添加動畫。 \n \n Q7:線上遊戲? \n \n A7: \n \n 1.使用嵌入式代碼:將線上遊戲的嵌入代碼（embed code）添加到你的網站中。許多線上遊戲提供了嵌入代碼，你只需將其添加到網站的HTML中的相應位置即可。 \n \n 2.使用iframe元素:使用HTML的  <iframe>  元素來嵌入線上遊戲。你可以將遊戲的URL添加到  <iframe>  元素的 src 屬性中，然後將  <iframe>  元素添加到你的網站中的任何位置。 \n \n 補充: <iframe>  元素是HTML中的一個標記，用於在網頁中嵌入另一個獨立的HTML文檔或外部網頁。它提供了一種在當前網頁中包含其他網頁內容的方法，讓你可以將其他網站的內容嵌入到網頁中，或者在同一網站中的不同頁面之間嵌入內容。 \n \n <iframe>  元素有一個 src 屬性，用於指定要嵌入的外部文檔或網頁的URL。除此之外，還可以設置其他屬性來調整iframe的大小、邊框、樣式等。通過iframe，你可以在網頁中創建內嵌的互動元素，如Google地圖、YouTube視頻、線上遊戲等，為網站提供更豐富的內容和功能。 \n \n 3.設置遊戲頁面:在網站中創建一個專門的遊戲頁面，將遊戲嵌入到該頁面中。這樣做可以使遊戲與網站的其他內容分開，並為用戶提供更好的遊戲體驗。 \n \n 4.安全性:確保嵌入的遊戲代碼來源可信，以防止可能的安全風險。如果可能的話，最好使用來自可靠和信任的遊戲提供商的嵌入代碼。 \n \n Q8:3D 零組件展示? \n \n A8: \n \n 1.使用Javascript 3D庫:使用像Three.js這樣的JavaScript 3D庫，可以輕鬆在網站中展示3D零組件。你可以將3D模型導入到你的網站中，並使用Three.js等庫來渲染和顯示它們。這樣的庫通常提供了各種功能，如照明、動畫、交互等，以增強3D模型的表現力。 \n \n 2.使用網頁GL視窗:利用WebGL技術，你可以在網頁中嵌入可交互的3D場景。這需要一些較高級的編程知識，但它可以讓你在網頁中直接渲染3D模型，使它們能夠與用戶互動。 \n \n 3.嵌入式3D查看器:使用嵌入式3D查看器，如Sketchfab，可以將3D模型嵌入到你的網站中。Sketchfab提供了一個簡單的嵌入代碼，你可以將它添加到你的網站中，以便在線上展示和互動3D模型。 \n \n Q9:如何建立網頁系統中的網誌? \n \n A9:步驟 \n \n 1.選擇網誌平台 \n \n 2.設置網誌 \n \n 3.編輯內容 \n \n 4.發布文章 \n \n 5.促進網誌 \n \n 6.定期更新 \n \n Q10:如何建立網頁系統中的簡報? \n \n A10:步驟 \n \n 1.選擇簡報工具 \n \n 2.建立簡報 \n \n 3.增加內容 \n \n 4.設置轉場效果 \n \n 5.編輯和分享 \n \n 6.儲存 \n', 'tags': '', 'url': '網頁式內容管理.html'}, {'title': 'Python 程式系統', 'text': 'Q1:如何利用電腦輔助設計室的舊 Python 建立新的可攜環境? \n \n 要利用 Python 建立新的可攜環境（portable environment），通常可以使用虛擬環境（virtual environment）的概念來達成。這樣可以隔離和管理不同專案或需求所使用的 Python 庫和依賴。 \n \n 步驟 1: 安裝 Python \n \n 步驟 2: 安裝虛擬環境工具 \n \n 步驟 3: 創建新的虛擬環境 \n \n 步驟 4: 啟動虛擬環境 \n \n 步驟 5: 安裝所需的 Python 庫 \n \n 這樣，你就可以在不同的專案中使用不同的虛擬環境，每個環境都有其獨立的庫和依賴，從而保持環境的乾淨和管理的便利性。 \n \n Q2:在網頁中置入 Python 語法的程式加上對 Javascript 與超文件語法的了解後, 能夠應用在那些領域? \n \n 網頁開發與後端連接： \n 在網頁前端中使用JavaScript來處理用戶互動和動態效果，同時利用Python來處理後端邏輯、數據處理和業務邏輯。這種結合可以實現豐富的用戶體驗和高效的服務端處理。 \n \n 數據分析與可視化： \n Python在數據科學和分析領域有著廣泛的應用，能夠處理大量的數據和進行複雜的分析。將Python的數據處理程式碼嵌入到網頁中，結合JavaScript的圖表庫如D3.js或Chart.js，可以實現數據的動態可視化，用於報表展示或者交互式數據探索。 \n \n 自動化工具與網頁應用： \n 使用Python來開發自動化工具，例如網頁爬蟲、數據處理腳本等，這些工具可以在後端運行並與前端網頁交互。例如，用Python編寫的爬蟲程序可以收集數據，然後用JavaScript在網頁上顯示和處理這些數據。 \n \n 網站的後端開發： \n 使用Python來構建網站的後端，處理用戶的請求和業務邏輯，並與前端JavaScript進行通信。流行的Python框架如Django和Flask提供了強大的後端開發能力，能夠與前端進行無縫集成。 \n \n 教育和學習平台： \n 在教育和學習平台中，可以利用Python來實現互動式教學內容或者練習。將Python代碼嵌入到網頁中，讓學生能夠直接在瀏覽器中運行並查看結果，這樣有助於提升學習效率和實踐能力。 \n \n 總結來說，將Python語法與JavaScript和HTML結合，可以在網頁開發、數據分析與可視化、自動化工具開發、網站後端構建以及教育學習平台等多個領域發揮重要作用，這樣的結合能夠充分利用各種語言的優勢，為不同應用場景提供最佳的解決方案。 \n \n Q3:(精密)機械設計流程? \n \n 1.  需求分析和定義 \n 2.  概念設計 \n 3.  詳細設計 \n 4.  CAD 建模和分析 \n 5.  試製和測試 \n 6.  產品改進和最終設計確定 \n 7.  生產和驗證 \n 8.  上市和後期支持 \n \n Q4:設計運算? \n \n "設計運算"是指利用計算機科學和信息技術的方法來支持和增強設計過程的過程和方法。它涉及到將計算機科學的算法、數據結構、數學模型和編程技術應用於設計領域，以解決複雜的設計問題和優化設計過程。 \n \n 1.數字化設計工具： \n 2.參數化設計和自動化： \n \n Q5:特定系統模擬? \n \n 特定系統模擬指的是專門針對某一特定系統或設備進行的模擬和仿真過程。這種模擬通常旨在評估系統的性能、行為、效率或其他特定屬性，以便於設計改進、決策支持或問題解決。這些模擬可以涵蓋各種不同的領域和應用。 \n \n', 'tags': '', 'url': 'Python 程式系統.html'}, {'title': '網頁上的 IDE', 'text': 'IDE 是甚麼?  \n \n 它是一種軟體應用程序，旨在為軟體開發人員提供一個集成的工作環境，以便在其中進行軟體開發、測試、除錯和部署。IDE 提供了多種工具和功能，使開發過程更加高效和便捷。 \n \n 編輯器： \n 提供代碼編輯功能，包括語法高亮、自動完成、代碼折疊等，以幫助開發人員編寫和維護代碼。 \n 除錯器： \n 集成了除錯工具，支持在開發過程中檢測和修復代碼中的錯誤和異常。 \n 編譯器/解釋器： \n 支持將代碼編譯成可執行文件或者通過解釋器執行，並提供相應的編譯或執行設置。 \n 自動化工具： \n 集成了自動化工具，如自動化構建（Build）、版本控制（Version Control）、測試工具等，幫助開發團隊更有效地管理項目和進行版本控制。 \n 集成開發： \n 整合了多種開發所需的工具和資源，如文檔、教程、第三方庫、插件等，提供一站式的開發解決方案。 \n 專案管理： \n 提供專案管理功能，能夠組織和管理多個項目文件、資源和代碼庫。 \n \n 可以將 Replit、Codespaces 與 Gitpod 當成 IDE 用來開發各種程式嗎?  \n \n 與近端操作系統上的開發有何不同? \n \n 多人協同這樣安全嗎?  \n', 'tags': '', 'url': '網頁上的 IDE.html'}, {'title': 'AI 工具', 'text': 'ChatGPT 與 Gemini Pro 都可以直接利用 Gmail 帳號登入, 初級應用目前都可免費使用, 這兩個 AI 工具可以協助我們解決甚麼問題?  \n \n AI 工具曾經協助我們解決甚麼問題? \n \n \n \n', 'tags': '', 'url': 'AI 工具.html'}, {'title': 'w11', 'text': '\n 說明如何在網頁中加入 Brython 程式應用 \n \n', 'tags': '', 'url': 'w11.html'}, {'title': '從教務主機直接擷取資料', 'text': '利用 wsgi_v1.py 可以取得結果: wsgi_v1_output.txt 表示可以利用 Flask 建置網站程式取下教務主機中的相關資料. \n \n', 'tags': '', 'url': '從教務主機直接擷取資料.html'}, {'title': 'w13', 'text': '\n 從單機猜數字遊戲與 AI 應用談起 \n \n', 'tags': '', 'url': 'w13.html'}, {'title': '期末專案', 'text': '\n', 'tags': '', 'url': '期末專案.html'}, {'title': 'cmsimde', 'text': "SMap  - SiteMap - 依照階次列出網站的所有頁面. \n EditA  - Edit All page - 將所有頁面放入編輯模式中, 主要用來處理頁面搬遷, 刪除或決定衝突頁面內容版本. \n Edit  - Edit page - 先選擇要編輯的單一頁面後, 再點選 Edit, 即可進入單一頁面的編輯模式. \n Config  - Configure Site - 編輯頁面標題與管理者密碼. \n Search  - 動態頁面內容的關鍵字搜尋. \n IUpload  - Image file Upload - 圖檔的上傳功能, 可以上傳 jpg, png 與 gif 檔案, 其中若在手機上傳圖檔, 系統會自動將圖片檔案縮小為 800x800 大小. \n IList  - Image file List - 列出可以直接在頁面編輯模式中引用的圖片檔案. \n FUpload  - File Upload - 一般檔案的上傳功能, 目前可以上傳的檔案副檔名包括 'jpg', 'png', 'gif', '7z', 'pdf', 'zip', 'ttt', 'stl', 'txt', 'html', 'mp4' 等, 使用者可以自行修改. \n FList  - File List - 列出可以直接在頁面編輯模式中引用的上傳檔案. \n Logout  - 登出頁面編輯模式. \n Convert  - 將動態網站中位於 config/content.htm 檔案, 透過分頁設定轉為 content 目錄中的靜態網頁. \n acp  - git add, git commit 與 git push, 通常只有在 localhost 或自架主機上利用網頁表單協助將倉儲改版內容推向 Github 倉儲. \n SStatic  - Start Static Site - 利用 Python 啟動網站伺服功能, 可以讓使用者檢查轉檔後的靜態網站內容. \n RStatic  - Replit Static Site URL - 僅用於 Replit 模式, 當使用者按下 SStatic 後, 可以按下 RStatic 進入當下尚未推向 Github Pages 的靜態網站. \n 80  - 由 init.py 中 static_port 所決定的連結字串, 一般不使用 80, 只有在 Replit 中為了與動態網站共用 port, 才特別設為 80. \n \n", 'tags': '', 'url': 'cmsimde.html'}, {'title': 'Codespaces', 'text': 'https://cya41223106.github.io/wcm2024 \n \n \n', 'tags': '', 'url': 'Codespaces.html'}, {'title': 'Replit', 'text': 'https://replit.com \n 利用 init_replit 指令安裝所需 Python 模組 chmod u+x init_replit ./init_replit \n On Replit: \n .replit: python3 main.py \n chmod u+x cms init_replit \n ./init_replit \n for cmsimde_site (not needed): git submodule update --init --recursive \n for cmsimde: pip install flask flask_cors bs4 lxml pelican markdown gevent \n password generator:\xa0 https://mde.tw/cmsite/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3abe48554509bbd43d65b6e5c82/hashlib_password_generator.py \xa0 \n \n for IPv6 only Ubuntu: .ssh 目錄中的 config, 將 SSH session 名稱設為 github.com: Host github.com User git Hostname github.com ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p for Replit: .ssh 目錄中的 config, 將 SSH session 名稱設為 github.com: Host github.com User git Hostname github.co #since Replit works for IPv4, therefore no ProxyCommand setting needed #ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p \n \n \n', 'tags': '', 'url': 'Replit.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍) \n Variables ( Python Keywords ) \n Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解) \n Numbers  (整數 int(), 浮點數 float()) \n Strings  (字串) \n print (Python 內建函式,  print()  函式) \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n \n', 'tags': '', 'url': 'Brython.html'}]};